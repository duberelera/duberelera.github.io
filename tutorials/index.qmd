---
title: 'R aplicado a Medición Forestal'
subtitle: 'Tutoriales para estudiantes de Ciencias Forestales'
date: "`r Sys.Date()`"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# **R Básico: Primeros Pasos**
*Autor: MSc. Duberlí G. Elera Gonzales*

# ¿Qué es y por qué usar `R`?

`R` es un lenguaje de programación con enfoque estadístico. Tiene una amplia gama de aplicaciones, principalmente en el campo científico. Por ese motivo utilizaremos `R` en la parte práctica del curso Mediciones Forestales.

En esta primera etapa, se conocerá la funcionalidad del software, la sintaxis del mismo, el tipo de operaciones básicas que pueden ser ejecutadas, así como la creación y manipulación de objetos.

## R como una calculadora

### Operaciones matemáticas

```{r }
2 + 2 #Suma
6 - 2 #resta
3 * 2 #Multiplicación
12/5 #División
2^3 #Potencia
2**3 
10%%3 #Módulo
12%%4
sqrt(36) #Raíz cuadrada
log(25) #Logaritmo Natural
log10(25) #Logaritmo base 10
exp(1) #Antilogaritmo o número e
```

## Asignación de variables

```{r }
#asignación de un valor a "x"
x <- 12 - 4
x

#asignación de un valor a "y"
y <- sqrt(x)
y

#asignación de un valor a "z"
z <- log(y*sqrt(x))
z
```

## Creación y manipulación de objetos en R

### Vector

Un vector puede estar conformado por valores únicos o múltiples y pueden ser de tipo numérico, caracter o lógico.

```{r }
#Vector de un elemento numérico
v1 <- 2
v1
is.vector(v1) #Consulta para verificar si es un vector

#Vector de un elemento tipo caracter
v2 <- 'juan'
v2
is.vector(v2)

#Vector de un elemento lógico
v3 <- FALSE
v3
is.vector(v3)
```

La función más utilizada para la formación o construcción de vectores en `R` es la función `c()`, tal como se muestra a continuación.

```{r }
#Vector de números enteros
v4 <- c(4, 8, 12, 15)
v4

#Vector de números decimales
v5 <- c(4, 8, 12, 15, sqrt(35), log(15))
v5

#Vector de números decimales
v6 <- c(4, 8, 10.7, 12, 15)
v6

#Vector de caracteres
v7 <- c(5, 8, 'juan', 'tereza')
v7
is.vector(v7)

#Vector de números caracteres
v8 <- c("nilser", 'kely', 'ronal', 'jorge')
v8

#Vector de valores lógicos
v9 <- c(TRUE, TRUE, FALSE, TRUE)
v9
is.vector(v9)

#Construción de un vector a partir de otros vectores
v10 <- c(v1, v4)
v10

#Sumando un valor a todos los elementos de un vector
v11 <- v10 + 5
v11

#Raíz cuadrada de un vector
v12 <- sqrt(v11)
v12

#Potencia de un vector
v13 <- v11**3
v13
```

### Operaciones con vectores

```{r }
#Creación del vector de diámetros 'dap'
dap <- c(8, 9.4, 11, 7, 8.9,
         10, 15, 12.8, 13, 3)
dap

#Calculando el promedio del dap
media1 <- sum(dap)/10
media1

#Cálculo el promedio del dap consultando el número de elementos del vector 'dap'
media2 <- sum(dap)/length(dap)
media2

#Promedio utilizando la función mean
media3 <- mean(dap)
media3

#Desviación estándar del dap
desvest <- sd(dap)
desvest

#Convertir el dap de cm a metros
dap_m <- dap/100
dap_m

#Calcular el área seccional de esos árboles
as <- (pi/4)*dap_m^2
as

#Graficando dap versus as
plot(dap, as)
```

### Funciones en `R` para la creación de vectores

```{r }
#Secuencia de números enteros
v14 <- 1:10
v14

#Secuencia de números decimales
v15 <- 10.5:20
v15

#vector de números negativos
v16 <- -10:-1 
v16

#Vector de de un gran número de elementos
v17 <- 20:5000

#Consultando la longitud de 'v17'
length(v17)
```

El vector `v17` tiene `r length(v17)` elementos.

```{r }
#consultando los primeros  100 elementos de 'v17'
head(v17, 100)


#Uso de la función seq() para la creación de secuencias

#Crea una secuencia de 1 a 20, con un intervalo de 2
v18 <- seq(1, 20, 2)
v18

#Crea una secuencia de 50 a 1, con un intervalo de -4
v19 <- seq(50, 1, -4)
v19

#Crea una secuencia de 30 a 35, con un intervalo de 0.75
v20 <- seq(10, 35, 0.75)
v20

#Uso de la función rep() para la creación de repeticiones

#Repite 5 veces el número 1
v21 <- rep(1, 5)
v21

#Repite 5 veces el vector 'dap'
v22 <- rep(dap, 5)
v22
```

## Bonus Track

Otra forma para asignación de valores a un objeto o variable.

```{r }
# Asignación de valores al vector 'a'
c(1, 2, 3) -> a
a
```
