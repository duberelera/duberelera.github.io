[
  {
    "objectID": "tutorials/t04_r_basico_readfiles.html",
    "href": "tutorials/t04_r_basico_readfiles.html",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Quienes trabajamos con datos, utilizamos diversos tipos de fuentes, esa particularidad hace que los datos que vamos a utilizar estén disponibles en diferentes tipos de archivos.\nGracias al enorme potencial de R, utilizar diversos tipos de archivos no es un problema mayor, importar datos para poder leerlos y vizualizarlos en R es bastante simple y la capacidad de importación es amplia, desde archivos de texto txt o csv que se pueden importar con funciones del paquete básico de R, hasta archivos de excel xlsx o xls u otros softwares estadísticos e incluso desde otros lenguajes de programación.\n\n\nLos archivos con extensión TXT representan a archivos tipo textfile (archivo de texto). Es un archivo informático que estructura series de líneas de texto. Incluye caracteres de control como tabulaciones y saltos de línea, lo que facilita el almacenamiento de datos ordenados en forma de tablas. En windows puede crearse utilizando el comúnmente denominado Block de Notas.\n\nEn la carpeta de mi proyecto de R tengo datos de medición de árboles guardados en el archivo archivo_de_texto.txt para poder leerlo en R utilizamos la función read.table(), con tres argumentos principales file, header y sep.file, hace referencia al nombre del archivo incluido la extensión o tipo de formato.header, es un valor lógico, “TRUE” indica que la primera línea es el encabezado de los datos.sep, pide especificar la forma en la cual esta ordenada da línea de datos, en el caso del ejemplo que se muestra a continuacipon tiene un control de tabulación (tab).\n\n#Importar una tabla de datos en formato .txt\nd &lt;- read.table(file = 'files/archivo_de_texto.txt', header = TRUE, sep = '\\t')\nhead(d)\n\n  arbol dap   ht\n1     1 6.0 12.6\n2     2 6.7 13.9\n3     3 6.7 11.7\n4     4 7.0 12.8\n5     5 6.8 13.3\n6     6 8.6 16.3\n\n\nEn seguida creamos nuestro marco de datos utilizando la función data.frame() cuyos argumentos son los tres vectores creados en el paso anterior y le asignamos el nombre df.\n\n#Construyendo mi data frame o cuadro de datos\n\nEn nuestro ejemplo, creamos df con datos de mediciones del dap de 10 árboles.\nCuando trabajos con mediciones forestales es usual calcular nuevas variables de tal manera que necesitamos ampliar nuestra data frame adicionando nuevas columnas, para ello utilizamos la siguiente estrategia.\n\n\n\n\nEn análisis de datos es común trabajar con bases de datos de gran tamaño. Una de las primeras tareas como analista de datos será conocer las variables con las que se va trabajar y comprender la estructura y conocer las características de los datos\n\n\n\nEn la etapa de exploración también es común auxiliarse de los métodos gráficos, con la finalidad de visualizar la distribución, relación y dispersión de las observaciones que conforman el data frame.\n\n\n\nAsí mismo, se puede hacer un análisis gráfico de la distribución de una variable o de la relación de pares de variables.\n\n\n\nPara explorar parte de nuestros datos cuando se cuenta con bases de datos extensas, a menudo es útil mostrar sólo una pequeña parte de todo el conjunto de datos."
  },
  {
    "objectID": "tutorials/t04_r_basico_readfiles.html#importar-un-archivo-de-texto-.txt",
    "href": "tutorials/t04_r_basico_readfiles.html#importar-un-archivo-de-texto-.txt",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Los archivos con extensión TXT representan a archivos tipo textfile (archivo de texto). Es un archivo informático que estructura series de líneas de texto. Incluye caracteres de control como tabulaciones y saltos de línea, lo que facilita el almacenamiento de datos ordenados en forma de tablas. En windows puede crearse utilizando el comúnmente denominado Block de Notas.\n\nEn la carpeta de mi proyecto de R tengo datos de medición de árboles guardados en el archivo archivo_de_texto.txt para poder leerlo en R utilizamos la función read.table(), con tres argumentos principales file, header y sep.file, hace referencia al nombre del archivo incluido la extensión o tipo de formato.header, es un valor lógico, “TRUE” indica que la primera línea es el encabezado de los datos.sep, pide especificar la forma en la cual esta ordenada da línea de datos, en el caso del ejemplo que se muestra a continuacipon tiene un control de tabulación (tab).\n\n#Importar una tabla de datos en formato .txt\nd &lt;- read.table(file = 'files/archivo_de_texto.txt', header = TRUE, sep = '\\t')\nhead(d)\n\n  arbol dap   ht\n1     1 6.0 12.6\n2     2 6.7 13.9\n3     3 6.7 11.7\n4     4 7.0 12.8\n5     5 6.8 13.3\n6     6 8.6 16.3\n\n\nEn seguida creamos nuestro marco de datos utilizando la función data.frame() cuyos argumentos son los tres vectores creados en el paso anterior y le asignamos el nombre df.\n\n#Construyendo mi data frame o cuadro de datos\n\nEn nuestro ejemplo, creamos df con datos de mediciones del dap de 10 árboles.\nCuando trabajos con mediciones forestales es usual calcular nuevas variables de tal manera que necesitamos ampliar nuestra data frame adicionando nuevas columnas, para ello utilizamos la siguiente estrategia."
  },
  {
    "objectID": "tutorials/t04_r_basico_readfiles.html#exploración-de-la-data-frames",
    "href": "tutorials/t04_r_basico_readfiles.html#exploración-de-la-data-frames",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "En análisis de datos es común trabajar con bases de datos de gran tamaño. Una de las primeras tareas como analista de datos será conocer las variables con las que se va trabajar y comprender la estructura y conocer las características de los datos\n\n\n\nEn la etapa de exploración también es común auxiliarse de los métodos gráficos, con la finalidad de visualizar la distribución, relación y dispersión de las observaciones que conforman el data frame.\n\n\n\nAsí mismo, se puede hacer un análisis gráfico de la distribución de una variable o de la relación de pares de variables.\n\n\n\nPara explorar parte de nuestros datos cuando se cuenta con bases de datos extensas, a menudo es útil mostrar sólo una pequeña parte de todo el conjunto de datos."
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html",
    "href": "tutorials/t02_r_basico_matrices.html",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Una matriz es un tipo especial de objeto en R, es una colección de elementos del mismo tipo de datos (numéricos, caracteres o lógicos) dispuestos en filas y columnas.\n\nPara construir una matriz en R hacemos uso de la función matrix(), que tiene dos argumentos fundamentales, 1) los datos a partir de los cuales se construirá la matriz (data) y 2) el número de filas que tendrá la matriz (nrow).\n\nLa forma más sencilla de crear una matriz en R es partir por la creación de un vector, el cuál será el primer argumento de la función.\n\n#Dado el vector 'x'\nx &lt;- 6:17 #vector de números enteros entre 6 y 17\nx\n\n [1]  6  7  8  9 10 11 12 13 14 15 16 17\n\n#Creamos la Matriz 'm1' con 3 filas.\nm1 &lt;- matrix(data = x, nrow = 3)\nm1\n\n     [,1] [,2] [,3] [,4]\n[1,]    6    9   12   15\n[2,]    7   10   13   16\n[3,]    8   11   14   17\n\n\nComo podemos apreciar, se formó una matriz de 3 filas (nrow = 3) y R definió el número de columnas de manera automática, en este caso 4 columnas.\nSin embargo, la función matrix() permite especificar el tanto número de filas y como el número de columnas, si el usuario así lo prefiere.\n\n#Creación de la matriz 'm2' con 4 filas y 3 columnas\nm2 &lt;- matrix(data = x, nrow = 4, ncol = 3)\nm2\n\n     [,1] [,2] [,3]\n[1,]    6   10   14\n[2,]    7   11   15\n[3,]    8   12   16\n[4,]    9   13   17\n\n\nEn las matrices m1 y m2 verificamos que los elementos de la matriz son ordenados en columnas, ello porque existe un cuarto argumento lógico de la función matrix() denominado byrow cuyo valor por defecto es FALSE, si modificamos ese argumento como TRUE, los elementos de la matriz serán ordenados por filas.\n\n#Creación de la matriz 'm3' ordenando por filas\nm3 &lt;- matrix(data = x, nrow = 4, ncol = 3, byrow = T)\nm3\n\n     [,1] [,2] [,3]\n[1,]    6    7    8\n[2,]    9   10   11\n[3,]   12   13   14\n[4,]   15   16   17\n\n\nLa función matrix() tiene un quinto argumento que permite definir los nombres de las filas y las columnas de una matriz. Este argumento se denomina dimnames y recibe como una lista con los vectores que asu vez contienen los nombres de las filas y las columnas.\n\n#Como primer paso, creamos los nombres de filas y columnas\nnfila &lt;- c('f1', 'f2', 'f3', 'f4') #Vector con los nombres de las 4 filas\n\nncolum &lt;- c('c1', 'c2', 'c3') #Vector con los nombres de las 3 columnas\n\n#Creamos la matriz 'm4' con nombres de filas y columnas\nm4 &lt;- matrix(data = x,\n             nrow = 4,\n             ncol = 3,\n             byrow = T,\n             dimnames = list(nfila, ncolum))\nm4\n\n   c1 c2 c3\nf1  6  7  8\nf2  9 10 11\nf3 12 13 14\nf4 15 16 17\n\n\nComo ya hemos visto en casos anteriores, la sintaxis de R permite aplicar una función e ingresar sus argumentos sin necesidad de indicar el nombre de estos, para ello, el valor de cada argumento de la función deberá ser ingresado en el orden que corresponde.\n\n#Creando una matriz, sin especificar el nombre de sus argumentos\nm6 &lt;- matrix(1:20, 4, 5, TRUE) #Debe crear una matriz con elementos numéricos de 1 a 20, con 4 filas, 5 columnas y ordenado por filas.\nm6\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n\n\nLas Matrices así como todos los objetos de R son suceptibles de manipular, pudiendo hacer modificaciones en todo o en parte de ella.\n\n#Dada la Matriz\nm7 &lt;- matrix(data = 1:12, nrow = 3) \n\n#Es posible convertir la matriz 'm7' en vector\nv1 &lt;- as.vector(m7)\nv1\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12\n\n#Trasponer una matriz utilizando la función t(), la cual cambia la posición entre filas y columnas.\nm8 &lt;- t(m7)\nm8\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n\n\nExisten funciones que permiten unir dos o más matrices ya sea adicionando nuevas columnas (cbind()) o nuevas filas (rcbind()).\n\n#Si tengo dos matrices con igual número de filas\nm9 &lt;- matrix(data = 1:12, nrow = 3)\nm9\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\nm10&lt;- matrix(data = 21:26, nrow = 3)\nm10\n\n     [,1] [,2]\n[1,]   21   24\n[2,]   22   25\n[3,]   23   26\n\n#Puedo construir una nueva matriz de 6 columnas y 3 filas, uniendo 'm9' y 'm10' con la función  'cbind()'\ncbind(m9, m10)\n\n     [,1] [,2] [,3] [,4] [,5] [,6]\n[1,]    1    4    7   10   21   24\n[2,]    2    5    8   11   22   25\n[3,]    3    6    9   12   23   26\n\n#Por el contrario Si tengo dos matrices con igual número de columnas\nm11 &lt;- matrix(data = 1:12, ncol = 3)\nm11\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nm12&lt;- matrix(data = 21:26, ncol = 3)\nm12\n\n     [,1] [,2] [,3]\n[1,]   21   23   25\n[2,]   22   24   26\n\n#Puedo construir una nueva matriz de 6 filas y 3 columnas, uniendo 'm11' y 'm12' con la función  'rbind()'\nrbind(m11, m12)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n[5,]   21   23   25\n[6,]   22   24   26\n\n\n\nAl igual que en las operaciones matemáticas con vectores, cuando realizamos operaciones matemáticas utilizando matrices, dichas operaciones se realizan sobre cada uno de los elementos de la matriz.\n\n#Dada la matriz\nm13 &lt;- matrix(data = 1:12, ncol = 3)\n\n#Sumatoria entre matrices\nm14 &lt;- m13 + m13\nm14\n\n     [,1] [,2] [,3]\n[1,]    2   10   18\n[2,]    4   12   20\n[3,]    6   14   22\n[4,]    8   16   24\n\n#Sumar una constante a una matriz\nm15 &lt;- m13 + 23\nm15\n\n     [,1] [,2] [,3]\n[1,]   24   28   32\n[2,]   25   29   33\n[3,]   26   30   34\n[4,]   27   31   35\n\n#Multiplicar una constante a una matriz\nm16 &lt;- m13*2\nm16\n\n     [,1] [,2] [,3]\n[1,]    2   10   18\n[2,]    4   12   20\n[3,]    6   14   22\n[4,]    8   16   24\n\n#Aplicar una potencia a una matriz\nm13^3\n\n     [,1] [,2] [,3]\n[1,]    1  125  729\n[2,]    8  216 1000\n[3,]   27  343 1331\n[4,]   64  512 1728\n\n#Aplicar raíz cuadrada a una matriz\nsqrt(m13)\n\n         [,1]     [,2]     [,3]\n[1,] 1.000000 2.236068 3.000000\n[2,] 1.414214 2.449490 3.162278\n[3,] 1.732051 2.645751 3.316625\n[4,] 2.000000 2.828427 3.464102\n\n\nIMPORTANTE: Cuando se realizan operaciones matemáticas entre matrices, debemos tener en consideración que sus dimensiones, es decir, el número de filas y de columnas, deben ser compatibles.\nEn su consola de RStudio, intente multiplicar m1*m2, las cuales tienen dimensiones diferentes. Verá que, al ejecutar el código le arrojará como resultados un error.\n\nEn multiples ocasiones, necesitaremos acceder a un elemento en particular o a un conjunto de elementos de un determinado objeto en R, dicha acción es posible mediante la identificación adecuada de los índices o posiciones de cada elemento del objeto, utilizando para ello el operador []. A continuación de muestra las distintas formas de acceder a los elementos d eun vector o una matriz.\n\n\n#Dado el vector 'x1'\nx1 &lt;- 6:14\nx1\n\n[1]  6  7  8  9 10 11 12 13 14\n\n#Accedo a sus elementos con el operador '[]'\nx1[5] #accedo a la posición 5 en x1\n\n[1] 10\n\nx1[9] #accedo a la posición 9 en x1\n\n[1] 14\n\nx1[4:7] #Accedo a posiciones consecutivas de 4 a 7\n\n[1]  9 10 11 12\n\nx1[c(2,4,6,8)] #accedo a las posiciones pares\n\n[1]  7  9 11 13\n\nx1[seq(1,9,2)]  #accedo a las posiciones impares\n\n[1]  6  8 10 12 14\n\n\n\nPara acceder a los elementos de una matriz es necesario indicar el índice a nivel de fila y columna.\n\n#Dada la matriz 'm'\nm &lt;- matrix(data = 1:20, nrow = 4, ncol= 5, byrow = TRUE) \nm\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n#Accediendo a la posición 1,1\nm[1,1] \n\n[1] 1\n\n#Accediendo a la posición 2,3\nm[2,3]\n\n[1] 8\n\n#Accediendo a la posición 3,4\nm[3,4]\n\n[1] 14\n\n#Accediendo a filas completas, fila 3\nm[3, ]\n\n[1] 11 12 13 14 15\n\n#Accediendo a columnas completas, columna 4\nm[ ,4]\n\n[1]  4  9 14 19\n\n#Accedediendo a columnas y filas consecutivas\nm[3, 2:4]\n\n[1] 12 13 14\n\nm[1:3, 2:4]\n\n     [,1] [,2] [,3]\n[1,]    2    3    4\n[2,]    7    8    9\n[3,]   12   13   14\n\n#Accedediendo a columnas y filas no consecutivas\nm[c(1,3,4), c(2,5)]\n\n     [,1] [,2]\n[1,]    2    5\n[2,]   12   15\n[3,]   17   20\n\n\n\n\n#Modificando el valor de la posición 1,1 en la matriz 'm'\nm[1,1] &lt;- 21\nm\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n#Modificando multiples valores de la matriz'm'\nm[c(1,3,4), c(2,5)] &lt;- 12\nm \n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21   12    3    4   12\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   12\n[4,]   16   12   18   19   12"
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html#matrices",
    "href": "tutorials/t02_r_basico_matrices.html#matrices",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Una matriz es un tipo especial de objeto en R, es una colección de elementos del mismo tipo de datos (numéricos, caracteres o lógicos) dispuestos en filas y columnas.\n\nPara construir una matriz en R hacemos uso de la función matrix(), que tiene dos argumentos fundamentales, 1) los datos a partir de los cuales se construirá la matriz (data) y 2) el número de filas que tendrá la matriz (nrow)."
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html#creación-de-una-matriz",
    "href": "tutorials/t02_r_basico_matrices.html#creación-de-una-matriz",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "La forma más sencilla de crear una matriz en R es partir por la creación de un vector, el cuál será el primer argumento de la función.\n\n#Dado el vector 'x'\nx &lt;- 6:17 #vector de números enteros entre 6 y 17\nx\n\n [1]  6  7  8  9 10 11 12 13 14 15 16 17\n\n#Creamos la Matriz 'm1' con 3 filas.\nm1 &lt;- matrix(data = x, nrow = 3)\nm1\n\n     [,1] [,2] [,3] [,4]\n[1,]    6    9   12   15\n[2,]    7   10   13   16\n[3,]    8   11   14   17\n\n\nComo podemos apreciar, se formó una matriz de 3 filas (nrow = 3) y R definió el número de columnas de manera automática, en este caso 4 columnas.\nSin embargo, la función matrix() permite especificar el tanto número de filas y como el número de columnas, si el usuario así lo prefiere.\n\n#Creación de la matriz 'm2' con 4 filas y 3 columnas\nm2 &lt;- matrix(data = x, nrow = 4, ncol = 3)\nm2\n\n     [,1] [,2] [,3]\n[1,]    6   10   14\n[2,]    7   11   15\n[3,]    8   12   16\n[4,]    9   13   17\n\n\nEn las matrices m1 y m2 verificamos que los elementos de la matriz son ordenados en columnas, ello porque existe un cuarto argumento lógico de la función matrix() denominado byrow cuyo valor por defecto es FALSE, si modificamos ese argumento como TRUE, los elementos de la matriz serán ordenados por filas.\n\n#Creación de la matriz 'm3' ordenando por filas\nm3 &lt;- matrix(data = x, nrow = 4, ncol = 3, byrow = T)\nm3\n\n     [,1] [,2] [,3]\n[1,]    6    7    8\n[2,]    9   10   11\n[3,]   12   13   14\n[4,]   15   16   17\n\n\nLa función matrix() tiene un quinto argumento que permite definir los nombres de las filas y las columnas de una matriz. Este argumento se denomina dimnames y recibe como una lista con los vectores que asu vez contienen los nombres de las filas y las columnas.\n\n#Como primer paso, creamos los nombres de filas y columnas\nnfila &lt;- c('f1', 'f2', 'f3', 'f4') #Vector con los nombres de las 4 filas\n\nncolum &lt;- c('c1', 'c2', 'c3') #Vector con los nombres de las 3 columnas\n\n#Creamos la matriz 'm4' con nombres de filas y columnas\nm4 &lt;- matrix(data = x,\n             nrow = 4,\n             ncol = 3,\n             byrow = T,\n             dimnames = list(nfila, ncolum))\nm4\n\n   c1 c2 c3\nf1  6  7  8\nf2  9 10 11\nf3 12 13 14\nf4 15 16 17\n\n\nComo ya hemos visto en casos anteriores, la sintaxis de R permite aplicar una función e ingresar sus argumentos sin necesidad de indicar el nombre de estos, para ello, el valor de cada argumento de la función deberá ser ingresado en el orden que corresponde.\n\n#Creando una matriz, sin especificar el nombre de sus argumentos\nm6 &lt;- matrix(1:20, 4, 5, TRUE) #Debe crear una matriz con elementos numéricos de 1 a 20, con 4 filas, 5 columnas y ordenado por filas.\nm6\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20"
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html#manipulación-de-matrices",
    "href": "tutorials/t02_r_basico_matrices.html#manipulación-de-matrices",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Las Matrices así como todos los objetos de R son suceptibles de manipular, pudiendo hacer modificaciones en todo o en parte de ella.\n\n#Dada la Matriz\nm7 &lt;- matrix(data = 1:12, nrow = 3) \n\n#Es posible convertir la matriz 'm7' en vector\nv1 &lt;- as.vector(m7)\nv1\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12\n\n#Trasponer una matriz utilizando la función t(), la cual cambia la posición entre filas y columnas.\nm8 &lt;- t(m7)\nm8\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n\n\nExisten funciones que permiten unir dos o más matrices ya sea adicionando nuevas columnas (cbind()) o nuevas filas (rcbind()).\n\n#Si tengo dos matrices con igual número de filas\nm9 &lt;- matrix(data = 1:12, nrow = 3)\nm9\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\nm10&lt;- matrix(data = 21:26, nrow = 3)\nm10\n\n     [,1] [,2]\n[1,]   21   24\n[2,]   22   25\n[3,]   23   26\n\n#Puedo construir una nueva matriz de 6 columnas y 3 filas, uniendo 'm9' y 'm10' con la función  'cbind()'\ncbind(m9, m10)\n\n     [,1] [,2] [,3] [,4] [,5] [,6]\n[1,]    1    4    7   10   21   24\n[2,]    2    5    8   11   22   25\n[3,]    3    6    9   12   23   26\n\n#Por el contrario Si tengo dos matrices con igual número de columnas\nm11 &lt;- matrix(data = 1:12, ncol = 3)\nm11\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nm12&lt;- matrix(data = 21:26, ncol = 3)\nm12\n\n     [,1] [,2] [,3]\n[1,]   21   23   25\n[2,]   22   24   26\n\n#Puedo construir una nueva matriz de 6 filas y 3 columnas, uniendo 'm11' y 'm12' con la función  'rbind()'\nrbind(m11, m12)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n[5,]   21   23   25\n[6,]   22   24   26"
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html#operaciones-matemáticas-con-matrices",
    "href": "tutorials/t02_r_basico_matrices.html#operaciones-matemáticas-con-matrices",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Al igual que en las operaciones matemáticas con vectores, cuando realizamos operaciones matemáticas utilizando matrices, dichas operaciones se realizan sobre cada uno de los elementos de la matriz.\n\n#Dada la matriz\nm13 &lt;- matrix(data = 1:12, ncol = 3)\n\n#Sumatoria entre matrices\nm14 &lt;- m13 + m13\nm14\n\n     [,1] [,2] [,3]\n[1,]    2   10   18\n[2,]    4   12   20\n[3,]    6   14   22\n[4,]    8   16   24\n\n#Sumar una constante a una matriz\nm15 &lt;- m13 + 23\nm15\n\n     [,1] [,2] [,3]\n[1,]   24   28   32\n[2,]   25   29   33\n[3,]   26   30   34\n[4,]   27   31   35\n\n#Multiplicar una constante a una matriz\nm16 &lt;- m13*2\nm16\n\n     [,1] [,2] [,3]\n[1,]    2   10   18\n[2,]    4   12   20\n[3,]    6   14   22\n[4,]    8   16   24\n\n#Aplicar una potencia a una matriz\nm13^3\n\n     [,1] [,2] [,3]\n[1,]    1  125  729\n[2,]    8  216 1000\n[3,]   27  343 1331\n[4,]   64  512 1728\n\n#Aplicar raíz cuadrada a una matriz\nsqrt(m13)\n\n         [,1]     [,2]     [,3]\n[1,] 1.000000 2.236068 3.000000\n[2,] 1.414214 2.449490 3.162278\n[3,] 1.732051 2.645751 3.316625\n[4,] 2.000000 2.828427 3.464102\n\n\nIMPORTANTE: Cuando se realizan operaciones matemáticas entre matrices, debemos tener en consideración que sus dimensiones, es decir, el número de filas y de columnas, deben ser compatibles.\nEn su consola de RStudio, intente multiplicar m1*m2, las cuales tienen dimensiones diferentes. Verá que, al ejecutar el código le arrojará como resultados un error."
  },
  {
    "objectID": "tutorials/t02_r_basico_matrices.html#acceso-a-los-elementos-de-un-objeto-r",
    "href": "tutorials/t02_r_basico_matrices.html#acceso-a-los-elementos-de-un-objeto-r",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "En multiples ocasiones, necesitaremos acceder a un elemento en particular o a un conjunto de elementos de un determinado objeto en R, dicha acción es posible mediante la identificación adecuada de los índices o posiciones de cada elemento del objeto, utilizando para ello el operador []. A continuación de muestra las distintas formas de acceder a los elementos d eun vector o una matriz.\n\n\n#Dado el vector 'x1'\nx1 &lt;- 6:14\nx1\n\n[1]  6  7  8  9 10 11 12 13 14\n\n#Accedo a sus elementos con el operador '[]'\nx1[5] #accedo a la posición 5 en x1\n\n[1] 10\n\nx1[9] #accedo a la posición 9 en x1\n\n[1] 14\n\nx1[4:7] #Accedo a posiciones consecutivas de 4 a 7\n\n[1]  9 10 11 12\n\nx1[c(2,4,6,8)] #accedo a las posiciones pares\n\n[1]  7  9 11 13\n\nx1[seq(1,9,2)]  #accedo a las posiciones impares\n\n[1]  6  8 10 12 14\n\n\n\nPara acceder a los elementos de una matriz es necesario indicar el índice a nivel de fila y columna.\n\n#Dada la matriz 'm'\nm &lt;- matrix(data = 1:20, nrow = 4, ncol= 5, byrow = TRUE) \nm\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n#Accediendo a la posición 1,1\nm[1,1] \n\n[1] 1\n\n#Accediendo a la posición 2,3\nm[2,3]\n\n[1] 8\n\n#Accediendo a la posición 3,4\nm[3,4]\n\n[1] 14\n\n#Accediendo a filas completas, fila 3\nm[3, ]\n\n[1] 11 12 13 14 15\n\n#Accediendo a columnas completas, columna 4\nm[ ,4]\n\n[1]  4  9 14 19\n\n#Accedediendo a columnas y filas consecutivas\nm[3, 2:4]\n\n[1] 12 13 14\n\nm[1:3, 2:4]\n\n     [,1] [,2] [,3]\n[1,]    2    3    4\n[2,]    7    8    9\n[3,]   12   13   14\n\n#Accedediendo a columnas y filas no consecutivas\nm[c(1,3,4), c(2,5)]\n\n     [,1] [,2]\n[1,]    2    5\n[2,]   12   15\n[3,]   17   20\n\n\n\n\n#Modificando el valor de la posición 1,1 en la matriz 'm'\nm[1,1] &lt;- 21\nm\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n#Modificando multiples valores de la matriz'm'\nm[c(1,3,4), c(2,5)] &lt;- 12\nm \n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21   12    3    4   12\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   12\n[4,]   16   12   18   19   12"
  },
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Tutoriales para estudiantes de Ciencias Forestales",
    "section": "",
    "text": "R Básico: Primeros Pasos\nEn este tutorial conocerá ¿Qué es R?, aprenderá la funcionalidad básica R, la sintaxis del mismo, el tipo de operaciones básicas que pueden ser ejecutadas, así como la creación y manipulación de objetos.\nR Básico: Matrices\nEn este tutorial conocerá el tipo de objeto Matrix, un tipo especial de objeto en R. Una matriz es una colección de elementos del mismo tipo de datos (numéricos, caracteres o lógicos) dispuestos en filas y columnas.\nR Básico: Data Frame\nUna data frame es uno de los objetos más utilizados en R, es una estructura de datos que permite almacenar datos de diferentes tipos. En un nivel intuitivo, una data frame o marco de datos es como una matriz, con una estructura bidimensional de filas y columnas, con la diferencia que no todas las columnas están condicionadas a tener el mismo tipo de dato.\nR Básico: Importar Datos\nCuando trabajamos con datos, utilizamos diversos tipos de fuentes, esa particularidad hace que los datos que vamos a utilizar estén disponibles en diferentes tipos de archivos y R puede leer diferentes tipos de archivos, desde archivos de texto .txt hasta archivos georeferenciados como shapefile .shp.\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Duberli Elera Gonzales",
    "section": "",
    "text": "Scholar\n  \n  \n    \n     \n  \n\n\n\n\nHola a tod@s!\nSoy profesor asociado e investigador en la Universidad Nacional Autónoma de Chota - UNACH, responsable del Grupo de Investigación de Biometría y Geomática Forestal - BiGFor. Antes de trabajar como profesor universitario, ocupé el puesto de jefe de calidad y monitoreo forestal de Reforestadora Amazónica SA. Me gradué como Magister Scientiae en Ciencia Forestal en la Universidad Federal de Viçosa y actualmente estoy desarrollando mis estudios de doctorado en la Universidad Federal Rural de Pernambuco, Brasil.\nMi trabajo de investigación se centra en el monitoreo del crecimiento de plantaciones forestales y el uso de los sistemas de informaciones geográficas en el manejo forestal. Mi trabajo busca fomentar el uso de herramientas informáticas para el análisis de datos geoespaciales, asociados a la silvicultura y el manejo forestal. Trabajo en el desarrollo de bases de datos espaciales y espaciotemporales para comprender los patrones geográficos y temporales del crecimiento de plantaciones forestales, evaluar su relación con factores ambientales y de manejo, buscando la generación de información para una toma de desiciones basada en evidencias técnicas y científicas.\nHe publicado diversos artículos científicos en revistas nacionales e internaciones, actualmente soy Investigador RENACYT nivel V del Consejo Nacional de Ciencia, Tecnología e Innovación Tecnológica."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Sección en construcción"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Artículos Científicos",
    "section": "",
    "text": "This study aimed to evaluate the use of ANN to predict the parameters of the 3-PG model, which generate greater sensitivity in some outputs and present greater variation."
  },
  {
    "objectID": "research.html#improving-3-pg-calibration-and-parameterization-using-artificial-neural-networks",
    "href": "research.html#improving-3-pg-calibration-and-parameterization-using-artificial-neural-networks",
    "title": "Artículos Científicos",
    "section": "",
    "text": "This study aimed to evaluate the use of ANN to predict the parameters of the 3-PG model, which generate greater sensitivity in some outputs and present greater variation."
  },
  {
    "objectID": "research.html#ecuaciones-volumétricas-para-alnus-acuminata-kunth-betulaceae-de-plantaciones-forestales-en-los-andes-del-norte-peruano",
    "href": "research.html#ecuaciones-volumétricas-para-alnus-acuminata-kunth-betulaceae-de-plantaciones-forestales-en-los-andes-del-norte-peruano",
    "title": "Artículos Científicos",
    "section": "Ecuaciones volumétricas para Alnus acuminata Kunth (Betulaceae) de plantaciones forestales en los andes del norte peruano",
    "text": "Ecuaciones volumétricas para Alnus acuminata Kunth (Betulaceae) de plantaciones forestales en los andes del norte peruano\nEste trabajo tiene como objetivo ajustar ecuaciones para estimar el volumen individual de árboles de Alnus acuminata Kunth, especie nativa que forma parte de los agroecosistemas andinos de Perú y que en los últimos años se viene estableciendo en macizos forestales, principalmente en la zona norte de los andes peruanos."
  },
  {
    "objectID": "research.html#stock-anual-de-carbono-en-fustes-de-hymenaea-courbaril-mediante-el-análisis-de-anillos-de-crecimiento-y-densitometría-de-rayos-x",
    "href": "research.html#stock-anual-de-carbono-en-fustes-de-hymenaea-courbaril-mediante-el-análisis-de-anillos-de-crecimiento-y-densitometría-de-rayos-x",
    "title": "Artículos Científicos",
    "section": "Stock anual de carbono en fustes de Hymenaea courbaril mediante el análisis de anillos de crecimiento y densitometría de rayos X",
    "text": "Stock anual de carbono en fustes de Hymenaea courbaril mediante el análisis de anillos de crecimiento y densitometría de rayos X\nEl objetivo de este trabajo fue reconstruir el crecimiento secundario, y estimar el stock de carbono secuestrado anualmente en los fustes de árboles de la especie H. courbaril, en los bosques amazónicos del Perú."
  },
  {
    "objectID": "research.html#configuration-of-the-deep-neural-network-hyperparameters-for-the-hypsometric-modeling-of-the-guazuma-crinita-mart.-in-the-peruvian-amazon",
    "href": "research.html#configuration-of-the-deep-neural-network-hyperparameters-for-the-hypsometric-modeling-of-the-guazuma-crinita-mart.-in-the-peruvian-amazon",
    "title": "Artículos Científicos",
    "section": "Configuration of the Deep Neural Network Hyperparameters for the Hypsometric Modeling of the Guazuma crinita Mart. in the Peruvian Amazon",
    "text": "Configuration of the Deep Neural Network Hyperparameters for the Hypsometric Modeling of the Guazuma crinita Mart. in the Peruvian Amazon\nThe objective of this study was to evaluate the efficiency of using a deep learning neural network to predict the total height of Guazuma crinita Mart. from a large-scale continuous forest inventory, having specific objectives: (i) to configure and train the neural network and (ii) to evaluate the performance of the functions for total height prediction."
  },
  {
    "objectID": "research.html#artificial-intelligence-in-education-a-review-of-the-literature-in-international-scientific-journals",
    "href": "research.html#artificial-intelligence-in-education-a-review-of-the-literature-in-international-scientific-journals",
    "title": "Artículos Científicos",
    "section": "Artificial intelligence in education: a review of the literature in international scientific journals",
    "text": "Artificial intelligence in education: a review of the literature in international scientific journals\nThe objective of this article is to identify the contributions of AI to education over the last five decades, to present the scientific journals with the highest impact rates in the area of AI over the last 10 years and to analyse the role that AI will play in post-Covid-19 education."
  },
  {
    "objectID": "research.html#when-where-and-what-cultivate-an-optimization-model-for-rural-property-planning",
    "href": "research.html#when-where-and-what-cultivate-an-optimization-model-for-rural-property-planning",
    "title": "Artículos Científicos",
    "section": "When, where and what cultivate: An optimization model for rural property planning",
    "text": "When, where and what cultivate: An optimization model for rural property planning\nSustainable production and land use planning are recurring challenges in the agricultural and forestry activities. In this context, a mathematical programming model is proposed that allows for both optimal production planning and its updating, without land exploitation. The proposed model, based on cash flows, maximizes the overall profit and includes two types of decision variables: the first relates to design of new activities, while the second concerns adaptation of existing activities.\nCambio de cobertura y uso de la tierra por actividades antrópicas en el distrito de Chota, periodo 2003/2019\nEsta investigación tiene por objetivo evaluar el cambio de cobertura y uso de la tierra por actividades antrópicas en el distrito de Chota - Perú, periodo 2003-2019."
  },
  {
    "objectID": "research.html#data-based-agroecological-zoning-of-acrocomia-aculeata-gis-modeling-and-ecophysiological-aspects-into-a-brazilian-representative-occurrence-area",
    "href": "research.html#data-based-agroecological-zoning-of-acrocomia-aculeata-gis-modeling-and-ecophysiological-aspects-into-a-brazilian-representative-occurrence-area",
    "title": "Artículos Científicos",
    "section": "Data-based agroecological zoning of Acrocomia aculeata: GIS modeling and ecophysiological aspects into a Brazilian representative occurrence area",
    "text": "Data-based agroecological zoning of Acrocomia aculeata: GIS modeling and ecophysiological aspects into a Brazilian representative occurrence area\nThis paper main objective is to estimate the productive potential of eight fruit components (among oil content, weight, volume and internal structures dry mass) for a wide natural occurrence area of macauba trees, the Minas Gerais State, in Brazil."
  },
  {
    "objectID": "research.html#almacenamiento-de-carbono-en-sistemas-agroforestales",
    "href": "research.html#almacenamiento-de-carbono-en-sistemas-agroforestales",
    "title": "Artículos Científicos",
    "section": "Almacenamiento de carbono en sistemas agroforestales",
    "text": "Almacenamiento de carbono en sistemas agroforestales\nCarta al Editor con el objetivo de presentar importantes observaciones al artículo “Almacenamiento de carbono en sistemas agroforestales cafetaleros en las provincias de Jaén y San Ignacio, Cajamarca” publicado en el Vol. 4 Num. 1 (2016)."
  },
  {
    "objectID": "research.html#optimized-allocation-of-forest-restoration-zones-to-minimize-soil-losses-in-watersheds",
    "href": "research.html#optimized-allocation-of-forest-restoration-zones-to-minimize-soil-losses-in-watersheds",
    "title": "Artículos Científicos",
    "section": "Optimized allocation of forest restoration zones to minimize soil losses in watersheds",
    "text": "Optimized allocation of forest restoration zones to minimize soil losses in watersheds\nThe objective of this study was to develop a methodology to optimize forest restoration zones allocation in order to minimize soil loss in watersheds and fill the literature gap."
  },
  {
    "objectID": "research.html#potential-planting-areas-for-native-tree-species-in-minas-gerais-state-brazil-based-on-environmental-variables-and-wood-demand",
    "href": "research.html#potential-planting-areas-for-native-tree-species-in-minas-gerais-state-brazil-based-on-environmental-variables-and-wood-demand",
    "title": "Artículos Científicos",
    "section": "Potential planting areas for native tree species in minas gerais state, Brazil, based on environmental variables and wood demand",
    "text": "Potential planting areas for native tree species in minas gerais state, Brazil, based on environmental variables and wood demand\nThe objective of this study was to use the MaxEnt model and spatial statistics techniques to identify potential regions of Minas Gerais (MG) State (Southeast Region, Brazil) suitable for planting economically important native tree species."
  },
  {
    "objectID": "research.html#optimization-of-skid-trails-and-log-yards-on-the-amazon-forest",
    "href": "research.html#optimization-of-skid-trails-and-log-yards-on-the-amazon-forest",
    "title": "Artículos Científicos",
    "section": "Optimization of Skid Trails and Log Yards on the Amazon Forest",
    "text": "Optimization of Skid Trails and Log Yards on the Amazon Forest\nIn this study, we used Dijkstra algorithm to solve a network design problem, which involves determining the optimal allocation of yards and skid trails to access selected trees for harvesting. Four planning scenarios and three harvest cycles in a forest managed under the RIL system, located on the Brazilian Amazon, were con"
  },
  {
    "objectID": "research.html#determinación-de-la-intensidad-de-muestreo-en-inventario-forestal-continuo-en-un-bosque-tropical-lluvioso-denso-amazonia-oriental-brasil",
    "href": "research.html#determinación-de-la-intensidad-de-muestreo-en-inventario-forestal-continuo-en-un-bosque-tropical-lluvioso-denso-amazonia-oriental-brasil",
    "title": "Artículos Científicos",
    "section": "Determinación de la intensidad de muestreo en inventario forestal continuo en un bosque tropical lluvioso denso, Amazonia Oriental, Brasil",
    "text": "Determinación de la intensidad de muestreo en inventario forestal continuo en un bosque tropical lluvioso denso, Amazonia Oriental, Brasil\nEl objetivo de este estudio fue desarrollar una metodología para determinar la intensidad de muestreo de parcelas permanentes que cumpla las exigencias del Principio n° 08 del FSC (CBMF, 2002), de la NT/IBAMA 01/07 y del Manual Técnico para la instalación y medición de parcelas permanentes."
  },
  {
    "objectID": "research.html#modelagem-do-crescimento-e-espacialização-da-capacidade-produtiva-de-plantios-de-bolaina-guazuma-crinita-mart.-na-amazônia-central-peruana",
    "href": "research.html#modelagem-do-crescimento-e-espacialização-da-capacidade-produtiva-de-plantios-de-bolaina-guazuma-crinita-mart.-na-amazônia-central-peruana",
    "title": "Artículos Científicos",
    "section": "Modelagem do crescimento e espacialização da capacidade produtiva de plantios de bolaina (Guazuma crinita Mart.) na Amazônia central peruana",
    "text": "Modelagem do crescimento e espacialização da capacidade produtiva de plantios de bolaina (Guazuma crinita Mart.) na Amazônia central peruana\nO objetivo deste estudo foi modelar o crescimento e espacializar a capacidade produtiva de plantios de Guazuma crinita Mart. na Amazônia central peruana."
  },
  {
    "objectID": "research.html#spatial-and-temporal-distribution-of-urban-heat-islands",
    "href": "research.html#spatial-and-temporal-distribution-of-urban-heat-islands",
    "title": "Artículos Científicos",
    "section": "Spatial and temporal distribution of urban heat islands",
    "text": "Spatial and temporal distribution of urban heat islands\nThe purpose of this study is to evaluate the spatial and temporal distribution of heat islands in Vila Velha, ES, Brazil using the mono-window algorithm."
  },
  {
    "objectID": "tutorials/t01_r_basico_primeros_pasos.html",
    "href": "tutorials/t01_r_basico_primeros_pasos.html",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "R es un lenguaje de programación con enfoque estadístico. Tiene una amplia gama de aplicaciones, principalmente en el campo científico. Por ese motivo utilizaremos R en la parte práctica del curso Mediciones Forestales.\nEn esta primera etapa, se conocerá la funcionalidad del software, la sintaxis del mismo, el tipo de operaciones básicas que pueden ser ejecutadas, así como la creación y manipulación de objetos.\n\n\n\n2 + 2 #Suma\n\n[1] 4\n\n6 - 2 #resta\n\n[1] 4\n\n3 * 2 #Multiplicación\n\n[1] 6\n\n12/5 #División\n\n[1] 2.4\n\n2^3 #Potencia\n\n[1] 8\n\n2**3 \n\n[1] 8\n\n10%%3 #Módulo\n\n[1] 1\n\n12%%4\n\n[1] 0\n\nsqrt(36) #Raíz cuadrada\n\n[1] 6\n\nlog(25) #Logaritmo Natural\n\n[1] 3.218876\n\nlog10(25) #Logaritmo base 10\n\n[1] 1.39794\n\nexp(1) #Antilogaritmo o número e\n\n[1] 2.718282\n\n\n\n\n#asignación de un valor a \"x\"\nx &lt;- 12 - 4\nx\n\n[1] 8\n\n#asignación de un valor a \"y\"\ny &lt;- sqrt(x)\ny\n\n[1] 2.828427\n\n#asignación de un valor a \"z\"\nz &lt;- log(y*sqrt(x))\nz\n\n[1] 2.079442\n\n\n\n\nUn vector puede estar conformado por valores únicos o múltiples y pueden ser de tipo numérico, caracter o lógico.\n\n#Vector de un elemento numérico\nv1 &lt;- 2\nv1\n\n[1] 2\n\nis.vector(v1) #Consulta para verificar si es un vector\n\n[1] TRUE\n\n#Vector de un elemento tipo caracter\nv2 &lt;- 'juan'\nv2\n\n[1] \"juan\"\n\nis.vector(v2)\n\n[1] TRUE\n\n#Vector de un elemento lógico\nv3 &lt;- FALSE\nv3\n\n[1] FALSE\n\nis.vector(v3)\n\n[1] TRUE\n\n\nLa función más utilizada para la formación o construcción de vectores en R es la función c(), tal como se muestra a continuación.\n\n#Vector de números enteros\nv4 &lt;- c(4, 8, 12, 15)\nv4\n\n[1]  4  8 12 15\n\n#Vector de números decimales\nv5 &lt;- c(4, 8, 12, 15, sqrt(35), log(15))\nv5\n\n[1]  4.00000  8.00000 12.00000 15.00000  5.91608  2.70805\n\n#Vector de números decimales\nv6 &lt;- c(4, 8, 10.7, 12, 15)\nv6\n\n[1]  4.0  8.0 10.7 12.0 15.0\n\n#Vector de caracteres\nv7 &lt;- c(5, 8, 'juan', 'tereza')\nv7\n\n[1] \"5\"      \"8\"      \"juan\"   \"tereza\"\n\nis.vector(v7)\n\n[1] TRUE\n\n#Vector de números caracteres\nv8 &lt;- c(\"nilser\", 'kely', 'ronal', 'jorge')\nv8\n\n[1] \"nilser\" \"kely\"   \"ronal\"  \"jorge\" \n\n#Vector de valores lógicos\nv9 &lt;- c(TRUE, TRUE, FALSE, TRUE)\nv9\n\n[1]  TRUE  TRUE FALSE  TRUE\n\nis.vector(v9)\n\n[1] TRUE\n\n#Construción de un vector a partir de otros vectores\nv10 &lt;- c(v1, v4)\nv10\n\n[1]  2  4  8 12 15\n\n#Sumando un valor a todos los elementos de un vector\nv11 &lt;- v10 + 5\nv11\n\n[1]  7  9 13 17 20\n\n#Raíz cuadrada de un vector\nv12 &lt;- sqrt(v11)\nv12\n\n[1] 2.645751 3.000000 3.605551 4.123106 4.472136\n\n#Potencia de un vector\nv13 &lt;- v11**3\nv13\n\n[1]  343  729 2197 4913 8000\n\n\n\n\n#Creación del vector de diámetros 'dap'\ndap &lt;- c(8, 9.4, 11, 7, 8.9,\n         10, 15, 12.8, 13, 3)\ndap\n\n [1]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0\n\n#Calculando el promedio del dap\nmedia1 &lt;- sum(dap)/10\nmedia1\n\n[1] 9.81\n\n#Cálculo el promedio del dap consultando el número de elementos del vector 'dap'\nmedia2 &lt;- sum(dap)/length(dap)\nmedia2\n\n[1] 9.81\n\n#Promedio utilizando la función mean\nmedia3 &lt;- mean(dap)\nmedia3\n\n[1] 9.81\n\n#Desviación estándar del dap\ndesvest &lt;- sd(dap)\ndesvest\n\n[1] 3.43267\n\n#Convertir el dap de cm a metros\ndap_m &lt;- dap/100\ndap_m\n\n [1] 0.080 0.094 0.110 0.070 0.089 0.100 0.150 0.128 0.130 0.030\n\n#Calcular el área seccional de esos árboles\nas &lt;- (pi/4)*dap_m^2\nas\n\n [1] 0.0050265482 0.0069397782 0.0095033178 0.0038484510 0.0062211389\n [6] 0.0078539816 0.0176714587 0.0128679635 0.0132732290 0.0007068583\n\n#Graficando dap versus as\nplot(dap, as)\n\n\n\n\n\n\n#Secuencia de números enteros\nv14 &lt;- 1:10\nv14\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n#Secuencia de números decimales\nv15 &lt;- 10.5:20\nv15\n\n [1] 10.5 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5\n\n#vector de números negativos\nv16 &lt;- -10:-1 \nv16\n\n [1] -10  -9  -8  -7  -6  -5  -4  -3  -2  -1\n\n#Vector de de un gran número de elementos\nv17 &lt;- 20:5000\n\n#Consultando la longitud de 'v17'\nlength(v17)\n\n[1] 4981\n\n\nEl vector v17 tiene 4981 elementos.\n\n#consultando los primeros  100 elementos de 'v17'\nhead(v17, 100)\n\n  [1]  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37\n [19]  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55\n [37]  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73\n [55]  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91\n [73]  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109\n [91] 110 111 112 113 114 115 116 117 118 119\n\n#Uso de la función seq() para la creación de secuencias\n\n#Crea una secuencia de 1 a 20, con un intervalo de 2\nv18 &lt;- seq(1, 20, 2)\nv18\n\n [1]  1  3  5  7  9 11 13 15 17 19\n\n#Crea una secuencia de 50 a 1, con un intervalo de -4\nv19 &lt;- seq(50, 1, -4)\nv19\n\n [1] 50 46 42 38 34 30 26 22 18 14 10  6  2\n\n#Crea una secuencia de 30 a 35, con un intervalo de 0.75\nv20 &lt;- seq(10, 35, 0.75)\nv20\n\n [1] 10.00 10.75 11.50 12.25 13.00 13.75 14.50 15.25 16.00 16.75 17.50 18.25\n[13] 19.00 19.75 20.50 21.25 22.00 22.75 23.50 24.25 25.00 25.75 26.50 27.25\n[25] 28.00 28.75 29.50 30.25 31.00 31.75 32.50 33.25 34.00 34.75\n\n#Uso de la función rep() para la creación de repeticiones\n\n#Repite 5 veces el número 1\nv21 &lt;- rep(1, 5)\nv21\n\n[1] 1 1 1 1 1\n\n#Repite 5 veces el vector 'dap'\nv22 &lt;- rep(dap, 5)\nv22\n\n [1]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9\n[16] 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0\n[31]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9\n[46] 10.0 15.0 12.8 13.0  3.0\n\n\n\nOtra forma para asignación de valores a un objeto o variable.\n\n# Asignación de valores al vector 'a'\nc(1, 2, 3) -&gt; a\na\n\n[1] 1 2 3"
  },
  {
    "objectID": "tutorials/t01_r_basico_primeros_pasos.html#r-como-una-calculadora",
    "href": "tutorials/t01_r_basico_primeros_pasos.html#r-como-una-calculadora",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "2 + 2 #Suma\n\n[1] 4\n\n6 - 2 #resta\n\n[1] 4\n\n3 * 2 #Multiplicación\n\n[1] 6\n\n12/5 #División\n\n[1] 2.4\n\n2^3 #Potencia\n\n[1] 8\n\n2**3 \n\n[1] 8\n\n10%%3 #Módulo\n\n[1] 1\n\n12%%4\n\n[1] 0\n\nsqrt(36) #Raíz cuadrada\n\n[1] 6\n\nlog(25) #Logaritmo Natural\n\n[1] 3.218876\n\nlog10(25) #Logaritmo base 10\n\n[1] 1.39794\n\nexp(1) #Antilogaritmo o número e\n\n[1] 2.718282"
  },
  {
    "objectID": "tutorials/t01_r_basico_primeros_pasos.html#asignación-de-variables",
    "href": "tutorials/t01_r_basico_primeros_pasos.html#asignación-de-variables",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "#asignación de un valor a \"x\"\nx &lt;- 12 - 4\nx\n\n[1] 8\n\n#asignación de un valor a \"y\"\ny &lt;- sqrt(x)\ny\n\n[1] 2.828427\n\n#asignación de un valor a \"z\"\nz &lt;- log(y*sqrt(x))\nz\n\n[1] 2.079442"
  },
  {
    "objectID": "tutorials/t01_r_basico_primeros_pasos.html#creación-y-manipulación-de-objetos-en-r",
    "href": "tutorials/t01_r_basico_primeros_pasos.html#creación-y-manipulación-de-objetos-en-r",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Un vector puede estar conformado por valores únicos o múltiples y pueden ser de tipo numérico, caracter o lógico.\n\n#Vector de un elemento numérico\nv1 &lt;- 2\nv1\n\n[1] 2\n\nis.vector(v1) #Consulta para verificar si es un vector\n\n[1] TRUE\n\n#Vector de un elemento tipo caracter\nv2 &lt;- 'juan'\nv2\n\n[1] \"juan\"\n\nis.vector(v2)\n\n[1] TRUE\n\n#Vector de un elemento lógico\nv3 &lt;- FALSE\nv3\n\n[1] FALSE\n\nis.vector(v3)\n\n[1] TRUE\n\n\nLa función más utilizada para la formación o construcción de vectores en R es la función c(), tal como se muestra a continuación.\n\n#Vector de números enteros\nv4 &lt;- c(4, 8, 12, 15)\nv4\n\n[1]  4  8 12 15\n\n#Vector de números decimales\nv5 &lt;- c(4, 8, 12, 15, sqrt(35), log(15))\nv5\n\n[1]  4.00000  8.00000 12.00000 15.00000  5.91608  2.70805\n\n#Vector de números decimales\nv6 &lt;- c(4, 8, 10.7, 12, 15)\nv6\n\n[1]  4.0  8.0 10.7 12.0 15.0\n\n#Vector de caracteres\nv7 &lt;- c(5, 8, 'juan', 'tereza')\nv7\n\n[1] \"5\"      \"8\"      \"juan\"   \"tereza\"\n\nis.vector(v7)\n\n[1] TRUE\n\n#Vector de números caracteres\nv8 &lt;- c(\"nilser\", 'kely', 'ronal', 'jorge')\nv8\n\n[1] \"nilser\" \"kely\"   \"ronal\"  \"jorge\" \n\n#Vector de valores lógicos\nv9 &lt;- c(TRUE, TRUE, FALSE, TRUE)\nv9\n\n[1]  TRUE  TRUE FALSE  TRUE\n\nis.vector(v9)\n\n[1] TRUE\n\n#Construción de un vector a partir de otros vectores\nv10 &lt;- c(v1, v4)\nv10\n\n[1]  2  4  8 12 15\n\n#Sumando un valor a todos los elementos de un vector\nv11 &lt;- v10 + 5\nv11\n\n[1]  7  9 13 17 20\n\n#Raíz cuadrada de un vector\nv12 &lt;- sqrt(v11)\nv12\n\n[1] 2.645751 3.000000 3.605551 4.123106 4.472136\n\n#Potencia de un vector\nv13 &lt;- v11**3\nv13\n\n[1]  343  729 2197 4913 8000\n\n\n\n\n#Creación del vector de diámetros 'dap'\ndap &lt;- c(8, 9.4, 11, 7, 8.9,\n         10, 15, 12.8, 13, 3)\ndap\n\n [1]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0\n\n#Calculando el promedio del dap\nmedia1 &lt;- sum(dap)/10\nmedia1\n\n[1] 9.81\n\n#Cálculo el promedio del dap consultando el número de elementos del vector 'dap'\nmedia2 &lt;- sum(dap)/length(dap)\nmedia2\n\n[1] 9.81\n\n#Promedio utilizando la función mean\nmedia3 &lt;- mean(dap)\nmedia3\n\n[1] 9.81\n\n#Desviación estándar del dap\ndesvest &lt;- sd(dap)\ndesvest\n\n[1] 3.43267\n\n#Convertir el dap de cm a metros\ndap_m &lt;- dap/100\ndap_m\n\n [1] 0.080 0.094 0.110 0.070 0.089 0.100 0.150 0.128 0.130 0.030\n\n#Calcular el área seccional de esos árboles\nas &lt;- (pi/4)*dap_m^2\nas\n\n [1] 0.0050265482 0.0069397782 0.0095033178 0.0038484510 0.0062211389\n [6] 0.0078539816 0.0176714587 0.0128679635 0.0132732290 0.0007068583\n\n#Graficando dap versus as\nplot(dap, as)\n\n\n\n\n\n\n#Secuencia de números enteros\nv14 &lt;- 1:10\nv14\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n#Secuencia de números decimales\nv15 &lt;- 10.5:20\nv15\n\n [1] 10.5 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5\n\n#vector de números negativos\nv16 &lt;- -10:-1 \nv16\n\n [1] -10  -9  -8  -7  -6  -5  -4  -3  -2  -1\n\n#Vector de de un gran número de elementos\nv17 &lt;- 20:5000\n\n#Consultando la longitud de 'v17'\nlength(v17)\n\n[1] 4981\n\n\nEl vector v17 tiene 4981 elementos.\n\n#consultando los primeros  100 elementos de 'v17'\nhead(v17, 100)\n\n  [1]  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37\n [19]  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55\n [37]  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73\n [55]  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91\n [73]  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109\n [91] 110 111 112 113 114 115 116 117 118 119\n\n#Uso de la función seq() para la creación de secuencias\n\n#Crea una secuencia de 1 a 20, con un intervalo de 2\nv18 &lt;- seq(1, 20, 2)\nv18\n\n [1]  1  3  5  7  9 11 13 15 17 19\n\n#Crea una secuencia de 50 a 1, con un intervalo de -4\nv19 &lt;- seq(50, 1, -4)\nv19\n\n [1] 50 46 42 38 34 30 26 22 18 14 10  6  2\n\n#Crea una secuencia de 30 a 35, con un intervalo de 0.75\nv20 &lt;- seq(10, 35, 0.75)\nv20\n\n [1] 10.00 10.75 11.50 12.25 13.00 13.75 14.50 15.25 16.00 16.75 17.50 18.25\n[13] 19.00 19.75 20.50 21.25 22.00 22.75 23.50 24.25 25.00 25.75 26.50 27.25\n[25] 28.00 28.75 29.50 30.25 31.00 31.75 32.50 33.25 34.00 34.75\n\n#Uso de la función rep() para la creación de repeticiones\n\n#Repite 5 veces el número 1\nv21 &lt;- rep(1, 5)\nv21\n\n[1] 1 1 1 1 1\n\n#Repite 5 veces el vector 'dap'\nv22 &lt;- rep(dap, 5)\nv22\n\n [1]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9\n[16] 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0\n[31]  8.0  9.4 11.0  7.0  8.9 10.0 15.0 12.8 13.0  3.0  8.0  9.4 11.0  7.0  8.9\n[46] 10.0 15.0 12.8 13.0  3.0"
  },
  {
    "objectID": "tutorials/t01_r_basico_primeros_pasos.html#bonus-track",
    "href": "tutorials/t01_r_basico_primeros_pasos.html#bonus-track",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Otra forma para asignación de valores a un objeto o variable.\n\n# Asignación de valores al vector 'a'\nc(1, 2, 3) -&gt; a\na\n\n[1] 1 2 3"
  },
  {
    "objectID": "tutorials/t03_r_basico_dataframe.html",
    "href": "tutorials/t03_r_basico_dataframe.html",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Una data frame es una estructura de datos que permite almacenar datos de diferentes tipos. En un nivel intuitivo, una data frame o marco de datos es como una matriz, con una estructura bidimensional de filas y columnas, con la diferencia que no todas las columnas están condicionadas a tener el mismo tipo de dato.\n\nEn R una data frame se crea con la función data.frame(), los argumentos de esta función lo conforman las columnas que constituirán el marco de datos.\n\nPara crear una data frame de forma sencilla en R partiremos por la creación de vectores de la misma longitud.\n\n#Creación de los vectores que formarán mi data frame\narbol &lt;- 1:10\nespecie &lt;- rep('pino', 10)\ndap &lt;- c(18.1, 14.6, 16.9, 14.3, 12.7,\n         14.3, 19.1, 13.1, 15.9, 14)\n\nEn seguida creamos nuestro marco de datos utilizando la función data.frame() cuyos argumentos son los tres vectores creados en el paso anterior y le asignamos el nombre df.\n\n#Construyendo mi data frame o cuadro de datos\ndf &lt;- data.frame(arbol, especie, dap)\ndf\n\n   arbol especie  dap\n1      1    pino 18.1\n2      2    pino 14.6\n3      3    pino 16.9\n4      4    pino 14.3\n5      5    pino 12.7\n6      6    pino 14.3\n7      7    pino 19.1\n8      8    pino 13.1\n9      9    pino 15.9\n10    10    pino 14.0\n\n\nEn nuestro ejemplo, creamos df con datos de mediciones del dap de 10 árboles.\nCuando trabajos con mediciones forestales es usual calcular nuevas variables de tal manera que necesitamos ampliar nuestra data frame adicionando nuevas columnas, para ello utilizamos la siguiente estrategia.\n\n#Adicionando una nueva columna llamada 'dap_m' en la cual almacenamos el valor del 'dap' en m, dividiendo 'dap' en cm entre 100\ndf$dap_m &lt;-  df$dap/100 #df$dap_m crea la nueva columna 'dap_m' en df.\ndf\n\n   arbol especie  dap dap_m\n1      1    pino 18.1 0.181\n2      2    pino 14.6 0.146\n3      3    pino 16.9 0.169\n4      4    pino 14.3 0.143\n5      5    pino 12.7 0.127\n6      6    pino 14.3 0.143\n7      7    pino 19.1 0.191\n8      8    pino 13.1 0.131\n9      9    pino 15.9 0.159\n10    10    pino 14.0 0.140\n\n#Adicionamos una nueva columna para Calcular el área seccional de los árboles (m2)\ndf$as &lt;- (pi/4)*df$dap_m^2\ndf\n\n   arbol especie  dap dap_m         as\n1      1    pino 18.1 0.181 0.02573043\n2      2    pino 14.6 0.146 0.01674155\n3      3    pino 16.9 0.169 0.02243176\n4      4    pino 14.3 0.143 0.01606061\n5      5    pino 12.7 0.127 0.01266769\n6      6    pino 14.3 0.143 0.01606061\n7      7    pino 19.1 0.191 0.02865211\n8      8    pino 13.1 0.131 0.01347822\n9      9    pino 15.9 0.159 0.01985565\n10    10    pino 14.0 0.140 0.01539380\n\n# También es posible adicionar un nuevo vector con el valor de la altura de los árboles\ndf$ht &lt;- c(13, 9, 11, 8, 7, 9, 15, 7, 10, 8)\ndf\n\n   arbol especie  dap dap_m         as ht\n1      1    pino 18.1 0.181 0.02573043 13\n2      2    pino 14.6 0.146 0.01674155  9\n3      3    pino 16.9 0.169 0.02243176 11\n4      4    pino 14.3 0.143 0.01606061  8\n5      5    pino 12.7 0.127 0.01266769  7\n6      6    pino 14.3 0.143 0.01606061  9\n7      7    pino 19.1 0.191 0.02865211 15\n8      8    pino 13.1 0.131 0.01347822  7\n9      9    pino 15.9 0.159 0.01985565 10\n10    10    pino 14.0 0.140 0.01539380  8\n\n\n\nEn análisis de datos es común trabajar con bases de datos de gran tamaño. Una de las primeras tareas como analista de datos será conocer las variables con las que se va trabajar y comprender la estructura y conocer las características de los datos\n\n#Consultar el nombre de las variables que componen mi data frame\nnames(df)\n\n[1] \"arbol\"   \"especie\" \"dap\"     \"dap_m\"   \"as\"      \"ht\"     \n\n#Consultar la estructura de los datos\nstr(df)\n\n'data.frame':   10 obs. of  6 variables:\n $ arbol  : int  1 2 3 4 5 6 7 8 9 10\n $ especie: chr  \"pino\" \"pino\" \"pino\" \"pino\" ...\n $ dap    : num  18.1 14.6 16.9 14.3 12.7 14.3 19.1 13.1 15.9 14\n $ dap_m  : num  0.181 0.146 0.169 0.143 0.127 0.143 0.191 0.131 0.159 0.14\n $ as     : num  0.0257 0.0167 0.0224 0.0161 0.0127 ...\n $ ht     : num  13 9 11 8 7 9 15 7 10 8\n\n#Consultar las estadísticas descriptivas de los datos\nsummary(df)\n\n     arbol         especie               dap            dap_m       \n Min.   : 1.00   Length:10          Min.   :12.70   Min.   :0.1270  \n 1st Qu.: 3.25   Class :character   1st Qu.:14.07   1st Qu.:0.1407  \n Median : 5.50   Mode  :character   Median :14.45   Median :0.1445  \n Mean   : 5.50                      Mean   :15.30   Mean   :0.1530  \n 3rd Qu.: 7.75                      3rd Qu.:16.65   3rd Qu.:0.1665  \n Max.   :10.00                      Max.   :19.10   Max.   :0.1910  \n       as                ht       \n Min.   :0.01267   Min.   : 7.00  \n 1st Qu.:0.01556   1st Qu.: 8.00  \n Median :0.01640   Median : 9.00  \n Mean   :0.01871   Mean   : 9.70  \n 3rd Qu.:0.02179   3rd Qu.:10.75  \n Max.   :0.02865   Max.   :15.00  \n\n\nEn la etapa de exploración también es común auxiliarse de los métodos gráficos, con la finalidad de visualizar la distribución, relación y dispersión de las observaciones que conforman el data frame.\n\n#Visuaizar mis datos a través de un gráfico que muestra todas mis variables\nplot(df)\n\n\n\n\nAsí mismo, se puede hacer un análisis gráfico de la distribución de una variable o de la relación de pares de variables.\n\n#Creando un histrograma de frecuencias del 'dap' para vizualizar la distribución de las observaciones.\n\nhist(df$dap)\n\n\n\n#Gráfico que permite vizualizar la relación entre dos variables de mi data frame, en este caso dap vs. altura\nplot(ht ~ dap, df, pch = 19,  col = 'blue')\n\n\n\n#El argumento 'pch' define el tipo de punto y 'col' define el color.\n\nPara explorar parte de nuestros datos cuando se cuenta con bases de datos extensas, a menudo es útil mostrar sólo una pequeña parte de todo el conjunto de datos.\n\n#Visualizar parte de mis datos.\nhead(df) #Muestra las primeras 6 observaciones\n\n  arbol especie  dap dap_m         as ht\n1     1    pino 18.1 0.181 0.02573043 13\n2     2    pino 14.6 0.146 0.01674155  9\n3     3    pino 16.9 0.169 0.02243176 11\n4     4    pino 14.3 0.143 0.01606061  8\n5     5    pino 12.7 0.127 0.01266769  7\n6     6    pino 14.3 0.143 0.01606061  9\n\ntail(df) #Muestra las últimas 6 observaciones\n\n   arbol especie  dap dap_m         as ht\n5      5    pino 12.7 0.127 0.01266769  7\n6      6    pino 14.3 0.143 0.01606061  9\n7      7    pino 19.1 0.191 0.02865211 15\n8      8    pino 13.1 0.131 0.01347822  7\n9      9    pino 15.9 0.159 0.01985565 10\n10    10    pino 14.0 0.140 0.01539380  8\n\n\n\n\nAl igual que en vectores y matrices, se puede acceder a uno o un grupo de elementos de una data frame a través de sus respectivos índices, recordando que una data frame es una estructura de datos bidimensional.\n\n#Acceso a las variables o columnas de una data frame\ndf$especie #Accede a la columna de 'df' llamada especie\n\n [1] \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\"\n\ndf[2] #Accede a la columna 2 de 'df'\n\n   especie\n1     pino\n2     pino\n3     pino\n4     pino\n5     pino\n6     pino\n7     pino\n8     pino\n9     pino\n10    pino\n\ndf['especie'] #Accede a la columna de 'df' llamada especie\n\n   especie\n1     pino\n2     pino\n3     pino\n4     pino\n5     pino\n6     pino\n7     pino\n8     pino\n9     pino\n10    pino\n\n#Acceso a más de una columna.\ndf[2:4] #Accedo a las columas de 2 a 4 en 'df'\n\n   especie  dap dap_m\n1     pino 18.1 0.181\n2     pino 14.6 0.146\n3     pino 16.9 0.169\n4     pino 14.3 0.143\n5     pino 12.7 0.127\n6     pino 14.3 0.143\n7     pino 19.1 0.191\n8     pino 13.1 0.131\n9     pino 15.9 0.159\n10    pino 14.0 0.140\n\ndf[c(2,4,6)] #Accedo a las columas 2, 4 y 6 en 'df'\n\n   especie dap_m ht\n1     pino 0.181 13\n2     pino 0.146  9\n3     pino 0.169 11\n4     pino 0.143  8\n5     pino 0.127  7\n6     pino 0.143  9\n7     pino 0.191 15\n8     pino 0.131  7\n9     pino 0.159 10\n10    pino 0.140  8\n\n#Para acceder a filas y columnas se aplica el mismo procedimiento aplicado en matrices\ndf[5:8, c(2,4,6)]  #Accedo a las filas de la 5 a la 8 y a columas 2, 4 y 6 en 'df'\n\n  especie dap_m ht\n5    pino 0.127  7\n6    pino 0.143  9\n7    pino 0.191 15\n8    pino 0.131  7\n\n\n\nDespués de acceder a una columna completa de un data frame puede existir la necesidad de acceder a un segundo nivel, es decir a uno de los elementos de esa column e incluso hacer modificaciones por elemento.\n\n#Accediendo al elemento número 2 de la columna 'especie' \ndf$especie[2]\n\n[1] \"pino\"\n\n#Replazando valores en una variable o columna\n#Modificando el valor delemento número 2 de la columna 'especie'\ndf$especie[2] &lt;- 'eucalipto'\ndf\n\n   arbol   especie  dap dap_m         as ht\n1      1      pino 18.1 0.181 0.02573043 13\n2      2 eucalipto 14.6 0.146 0.01674155  9\n3      3      pino 16.9 0.169 0.02243176 11\n4      4      pino 14.3 0.143 0.01606061  8\n5      5      pino 12.7 0.127 0.01266769  7\n6      6      pino 14.3 0.143 0.01606061  9\n7      7      pino 19.1 0.191 0.02865211 15\n8      8      pino 13.1 0.131 0.01347822  7\n9      9      pino 15.9 0.159 0.01985565 10\n10    10      pino 14.0 0.140 0.01539380  8"
  },
  {
    "objectID": "tutorials/t03_r_basico_dataframe.html#data-frames",
    "href": "tutorials/t03_r_basico_dataframe.html#data-frames",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Una data frame es una estructura de datos que permite almacenar datos de diferentes tipos. En un nivel intuitivo, una data frame o marco de datos es como una matriz, con una estructura bidimensional de filas y columnas, con la diferencia que no todas las columnas están condicionadas a tener el mismo tipo de dato.\n\nEn R una data frame se crea con la función data.frame(), los argumentos de esta función lo conforman las columnas que constituirán el marco de datos."
  },
  {
    "objectID": "tutorials/t03_r_basico_dataframe.html#creación-de-una-data-frame",
    "href": "tutorials/t03_r_basico_dataframe.html#creación-de-una-data-frame",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Para crear una data frame de forma sencilla en R partiremos por la creación de vectores de la misma longitud.\n\n#Creación de los vectores que formarán mi data frame\narbol &lt;- 1:10\nespecie &lt;- rep('pino', 10)\ndap &lt;- c(18.1, 14.6, 16.9, 14.3, 12.7,\n         14.3, 19.1, 13.1, 15.9, 14)\n\nEn seguida creamos nuestro marco de datos utilizando la función data.frame() cuyos argumentos son los tres vectores creados en el paso anterior y le asignamos el nombre df.\n\n#Construyendo mi data frame o cuadro de datos\ndf &lt;- data.frame(arbol, especie, dap)\ndf\n\n   arbol especie  dap\n1      1    pino 18.1\n2      2    pino 14.6\n3      3    pino 16.9\n4      4    pino 14.3\n5      5    pino 12.7\n6      6    pino 14.3\n7      7    pino 19.1\n8      8    pino 13.1\n9      9    pino 15.9\n10    10    pino 14.0\n\n\nEn nuestro ejemplo, creamos df con datos de mediciones del dap de 10 árboles.\nCuando trabajos con mediciones forestales es usual calcular nuevas variables de tal manera que necesitamos ampliar nuestra data frame adicionando nuevas columnas, para ello utilizamos la siguiente estrategia.\n\n#Adicionando una nueva columna llamada 'dap_m' en la cual almacenamos el valor del 'dap' en m, dividiendo 'dap' en cm entre 100\ndf$dap_m &lt;-  df$dap/100 #df$dap_m crea la nueva columna 'dap_m' en df.\ndf\n\n   arbol especie  dap dap_m\n1      1    pino 18.1 0.181\n2      2    pino 14.6 0.146\n3      3    pino 16.9 0.169\n4      4    pino 14.3 0.143\n5      5    pino 12.7 0.127\n6      6    pino 14.3 0.143\n7      7    pino 19.1 0.191\n8      8    pino 13.1 0.131\n9      9    pino 15.9 0.159\n10    10    pino 14.0 0.140\n\n#Adicionamos una nueva columna para Calcular el área seccional de los árboles (m2)\ndf$as &lt;- (pi/4)*df$dap_m^2\ndf\n\n   arbol especie  dap dap_m         as\n1      1    pino 18.1 0.181 0.02573043\n2      2    pino 14.6 0.146 0.01674155\n3      3    pino 16.9 0.169 0.02243176\n4      4    pino 14.3 0.143 0.01606061\n5      5    pino 12.7 0.127 0.01266769\n6      6    pino 14.3 0.143 0.01606061\n7      7    pino 19.1 0.191 0.02865211\n8      8    pino 13.1 0.131 0.01347822\n9      9    pino 15.9 0.159 0.01985565\n10    10    pino 14.0 0.140 0.01539380\n\n# También es posible adicionar un nuevo vector con el valor de la altura de los árboles\ndf$ht &lt;- c(13, 9, 11, 8, 7, 9, 15, 7, 10, 8)\ndf\n\n   arbol especie  dap dap_m         as ht\n1      1    pino 18.1 0.181 0.02573043 13\n2      2    pino 14.6 0.146 0.01674155  9\n3      3    pino 16.9 0.169 0.02243176 11\n4      4    pino 14.3 0.143 0.01606061  8\n5      5    pino 12.7 0.127 0.01266769  7\n6      6    pino 14.3 0.143 0.01606061  9\n7      7    pino 19.1 0.191 0.02865211 15\n8      8    pino 13.1 0.131 0.01347822  7\n9      9    pino 15.9 0.159 0.01985565 10\n10    10    pino 14.0 0.140 0.01539380  8"
  },
  {
    "objectID": "tutorials/t03_r_basico_dataframe.html#exploración-de-la-data-frames",
    "href": "tutorials/t03_r_basico_dataframe.html#exploración-de-la-data-frames",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "En análisis de datos es común trabajar con bases de datos de gran tamaño. Una de las primeras tareas como analista de datos será conocer las variables con las que se va trabajar y comprender la estructura y conocer las características de los datos\n\n#Consultar el nombre de las variables que componen mi data frame\nnames(df)\n\n[1] \"arbol\"   \"especie\" \"dap\"     \"dap_m\"   \"as\"      \"ht\"     \n\n#Consultar la estructura de los datos\nstr(df)\n\n'data.frame':   10 obs. of  6 variables:\n $ arbol  : int  1 2 3 4 5 6 7 8 9 10\n $ especie: chr  \"pino\" \"pino\" \"pino\" \"pino\" ...\n $ dap    : num  18.1 14.6 16.9 14.3 12.7 14.3 19.1 13.1 15.9 14\n $ dap_m  : num  0.181 0.146 0.169 0.143 0.127 0.143 0.191 0.131 0.159 0.14\n $ as     : num  0.0257 0.0167 0.0224 0.0161 0.0127 ...\n $ ht     : num  13 9 11 8 7 9 15 7 10 8\n\n#Consultar las estadísticas descriptivas de los datos\nsummary(df)\n\n     arbol         especie               dap            dap_m       \n Min.   : 1.00   Length:10          Min.   :12.70   Min.   :0.1270  \n 1st Qu.: 3.25   Class :character   1st Qu.:14.07   1st Qu.:0.1407  \n Median : 5.50   Mode  :character   Median :14.45   Median :0.1445  \n Mean   : 5.50                      Mean   :15.30   Mean   :0.1530  \n 3rd Qu.: 7.75                      3rd Qu.:16.65   3rd Qu.:0.1665  \n Max.   :10.00                      Max.   :19.10   Max.   :0.1910  \n       as                ht       \n Min.   :0.01267   Min.   : 7.00  \n 1st Qu.:0.01556   1st Qu.: 8.00  \n Median :0.01640   Median : 9.00  \n Mean   :0.01871   Mean   : 9.70  \n 3rd Qu.:0.02179   3rd Qu.:10.75  \n Max.   :0.02865   Max.   :15.00  \n\n\nEn la etapa de exploración también es común auxiliarse de los métodos gráficos, con la finalidad de visualizar la distribución, relación y dispersión de las observaciones que conforman el data frame.\n\n#Visuaizar mis datos a través de un gráfico que muestra todas mis variables\nplot(df)\n\n\n\n\nAsí mismo, se puede hacer un análisis gráfico de la distribución de una variable o de la relación de pares de variables.\n\n#Creando un histrograma de frecuencias del 'dap' para vizualizar la distribución de las observaciones.\n\nhist(df$dap)\n\n\n\n#Gráfico que permite vizualizar la relación entre dos variables de mi data frame, en este caso dap vs. altura\nplot(ht ~ dap, df, pch = 19,  col = 'blue')\n\n\n\n#El argumento 'pch' define el tipo de punto y 'col' define el color.\n\nPara explorar parte de nuestros datos cuando se cuenta con bases de datos extensas, a menudo es útil mostrar sólo una pequeña parte de todo el conjunto de datos.\n\n#Visualizar parte de mis datos.\nhead(df) #Muestra las primeras 6 observaciones\n\n  arbol especie  dap dap_m         as ht\n1     1    pino 18.1 0.181 0.02573043 13\n2     2    pino 14.6 0.146 0.01674155  9\n3     3    pino 16.9 0.169 0.02243176 11\n4     4    pino 14.3 0.143 0.01606061  8\n5     5    pino 12.7 0.127 0.01266769  7\n6     6    pino 14.3 0.143 0.01606061  9\n\ntail(df) #Muestra las últimas 6 observaciones\n\n   arbol especie  dap dap_m         as ht\n5      5    pino 12.7 0.127 0.01266769  7\n6      6    pino 14.3 0.143 0.01606061  9\n7      7    pino 19.1 0.191 0.02865211 15\n8      8    pino 13.1 0.131 0.01347822  7\n9      9    pino 15.9 0.159 0.01985565 10\n10    10    pino 14.0 0.140 0.01539380  8"
  },
  {
    "objectID": "tutorials/t03_r_basico_dataframe.html#manipulación-de-data-frames",
    "href": "tutorials/t03_r_basico_dataframe.html#manipulación-de-data-frames",
    "title": "R aplicado a Medición Forestal",
    "section": "",
    "text": "Al igual que en vectores y matrices, se puede acceder a uno o un grupo de elementos de una data frame a través de sus respectivos índices, recordando que una data frame es una estructura de datos bidimensional.\n\n#Acceso a las variables o columnas de una data frame\ndf$especie #Accede a la columna de 'df' llamada especie\n\n [1] \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\" \"pino\"\n\ndf[2] #Accede a la columna 2 de 'df'\n\n   especie\n1     pino\n2     pino\n3     pino\n4     pino\n5     pino\n6     pino\n7     pino\n8     pino\n9     pino\n10    pino\n\ndf['especie'] #Accede a la columna de 'df' llamada especie\n\n   especie\n1     pino\n2     pino\n3     pino\n4     pino\n5     pino\n6     pino\n7     pino\n8     pino\n9     pino\n10    pino\n\n#Acceso a más de una columna.\ndf[2:4] #Accedo a las columas de 2 a 4 en 'df'\n\n   especie  dap dap_m\n1     pino 18.1 0.181\n2     pino 14.6 0.146\n3     pino 16.9 0.169\n4     pino 14.3 0.143\n5     pino 12.7 0.127\n6     pino 14.3 0.143\n7     pino 19.1 0.191\n8     pino 13.1 0.131\n9     pino 15.9 0.159\n10    pino 14.0 0.140\n\ndf[c(2,4,6)] #Accedo a las columas 2, 4 y 6 en 'df'\n\n   especie dap_m ht\n1     pino 0.181 13\n2     pino 0.146  9\n3     pino 0.169 11\n4     pino 0.143  8\n5     pino 0.127  7\n6     pino 0.143  9\n7     pino 0.191 15\n8     pino 0.131  7\n9     pino 0.159 10\n10    pino 0.140  8\n\n#Para acceder a filas y columnas se aplica el mismo procedimiento aplicado en matrices\ndf[5:8, c(2,4,6)]  #Accedo a las filas de la 5 a la 8 y a columas 2, 4 y 6 en 'df'\n\n  especie dap_m ht\n5    pino 0.127  7\n6    pino 0.143  9\n7    pino 0.191 15\n8    pino 0.131  7\n\n\n\nDespués de acceder a una columna completa de un data frame puede existir la necesidad de acceder a un segundo nivel, es decir a uno de los elementos de esa column e incluso hacer modificaciones por elemento.\n\n#Accediendo al elemento número 2 de la columna 'especie' \ndf$especie[2]\n\n[1] \"pino\"\n\n#Replazando valores en una variable o columna\n#Modificando el valor delemento número 2 de la columna 'especie'\ndf$especie[2] &lt;- 'eucalipto'\ndf\n\n   arbol   especie  dap dap_m         as ht\n1      1      pino 18.1 0.181 0.02573043 13\n2      2 eucalipto 14.6 0.146 0.01674155  9\n3      3      pino 16.9 0.169 0.02243176 11\n4      4      pino 14.3 0.143 0.01606061  8\n5      5      pino 12.7 0.127 0.01266769  7\n6      6      pino 14.3 0.143 0.01606061  9\n7      7      pino 19.1 0.191 0.02865211 15\n8      8      pino 13.1 0.131 0.01347822  7\n9      9      pino 15.9 0.159 0.01985565 10\n10    10      pino 14.0 0.140 0.01539380  8"
  }
]